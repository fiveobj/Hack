class String{
    field int len;
    field int maxLen;
    field Array chars;

    constructor String new(int maxLength){
        if(maxLength=0){
            let maxLength = 1;
        }

        let len = 0;
        let maxLen = maxLength;
        let chars = Array.new(maxLength);
        return this;
    }

    method void dispose(){
        do Memory.deAlloc(chars);
        return;
    }

    method int length(){
        return len;
    }

    method char charAt(int j){
        return chars[j];
    }

    method void setCharAt(int j, char c){
        let chars[j] = c;
    }

    method String appendChar(char c){
        if(len < maxLen){
            let chars[len] = c;
            let len = len + 1;
        }
        return this;
    }

    method void eraseLastChar(){
        if(len > 0){
            let len = len - 1;
        }
        return;
    }

    method int intValue(){
        var int value,index;
        var boolean isNeg;

        let value = 0;
        let index = 0;

        if((len>0)&(chars[index]=45)){
            let isNeg = true;
            let index = 1;
        }else{
            let isNeg = false;
            let index = 0;
        }

        while((index<len)&(~(chars[index]<48))&(~(chars[index]>57))){
            let value = (value * 10)+(chars[index]-48);
            let index = index + 1;
        }

        if(isNeg){
            return -value;
        }else {
            return value;
        }
    }

    method void setInt(int j){
        let len = 0;

        if(j<0){
            let j = -j;
            do appendChar(45);
        }

        do setIntAss(j);
        return;
    }

    method void setIntAss(int number){
        var int nextNum;

        if(number<10){
            do appendChar(number+48);
        }else{
            let nextNum = number/10;
            do setIntAss(nextNum);
            do appendChar((number - (nextNum*10))+48);
        }

        return;
    }

    function char backspace(){
        return 129;
    }

    function char doubleQuote(){
        return 34;
    }

    function char newLine(){
        return 128;
    }


}