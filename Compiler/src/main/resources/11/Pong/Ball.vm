//constructor Ball new
function Ball.new 0
push constant 15
call Memory.alloc 1
pop pointer 0

//let x = Ax;
push argument 0
pop this 0

//let y = Ay;
push argument 1
pop this 1

//let leftWall = AleftWall;
push argument 2
pop this 10

//let rightWall = ArightWall - 6;
push argument 3
push constant 6
sub
pop this 11

//let topWall = AtopWall;
push argument 4
pop this 12

//let bottomWall = AbottomWall - 6;
push argument 5
push constant 6
sub
pop this 13

//let wall = 0;
push constant 0
pop this 14

//do show();
push pointer 0
call Ball.show 1
pop temp 0

//return this;
push pointer 0
return

//method void dispose()
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return

// method void show()
function Ball.show 0
push argument 0
pop pointer 0
push constant 1
neg
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return

//method void hide()
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return

//method void draw()
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 0
push constant 5
add
push this 1
push constant 5
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return

//method int getLeft()
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
return

//method int getRight()
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push constant 5
add
return

//method void setDestination
function Ball.setDestination 3
push argument 0
pop pointer 0
push argument 1
push this 0
sub
pop this 2
push argument 2
push this 1
sub
pop this 3
push this 2
call Math.abs 1
pop local 0
push this 3
call Math.abs 1
pop local 1
push local 0
push local 1
lt
pop this 7
push this 7
if-goto IF_LABLE_START_0
goto IF_LABLE_ELSE_0
label IF_LABLE_START_0
push local 0
pop local 2
push local 1
pop local 0
push local 2
pop local 1
push this 1
push argument 2
lt
pop this 8
push this 0
push argument 1
lt
pop this 9
goto IF_LABLE_END_0
label IF_LABLE_ELSE_0
push this 0
push argument 1
lt
pop this 8
push this 1
push argument 2
lt
pop this 9
label IF_LABLE_END_0
push constant 2
push local 1
call Math.multiply 2
push local 0
sub
pop this 4
push constant 2
push local 1
call Math.multiply 2
pop this 5
push constant 2
push local 1
push local 0
sub
call Math.multiply 2
pop this 6
push constant 0
return

//method int move()
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 4
push constant 0
lt
if-goto IF_LABLE_START_1
goto IF_LABLE_ELSE_1
label IF_LABLE_START_1
push this 4
push this 5
add
pop this 4
goto IF_LABLE_END_1
label IF_LABLE_ELSE_1
push this 4
push this 6
add
pop this 4
push this 9
if-goto IF_LABLE_START_2
goto IF_LABLE_ELSE_2
label IF_LABLE_START_2
push this 7
if-goto IF_LABLE_START_3
goto IF_LABLE_ELSE_3
label IF_LABLE_START_3
push this 0
push constant 4
add
pop this 0
goto IF_LABLE_END_3
label IF_LABLE_ELSE_3
push this 1
push constant 4
add
pop this 1
label IF_LABLE_END_3
goto IF_LABLE_END_2
label IF_LABLE_ELSE_2
push this 7
if-goto IF_LABLE_START_4
goto IF_LABLE_ELSE_4
label IF_LABLE_START_4
push this 0
push constant 4
sub
pop this 0
goto IF_LABLE_END_4
label IF_LABLE_ELSE_4
push this 1
push constant 4
sub
pop this 1
label IF_LABLE_END_4
label IF_LABLE_END_2
label IF_LABLE_END_1
push this 8
if-goto IF_LABLE_START_5
goto IF_LABLE_ELSE_5
label IF_LABLE_START_5
push this 7
if-goto IF_LABLE_START_6
goto IF_LABLE_ELSE_6
label IF_LABLE_START_6
push this 1
push constant 4
add
pop this 1
goto IF_LABLE_END_6
label IF_LABLE_ELSE_6
push this 0
push constant 4
add
pop this 0
label IF_LABLE_END_6
goto IF_LABLE_END_5
label IF_LABLE_ELSE_5
push this 7
if-goto IF_LABLE_START_7
goto IF_LABLE_ELSE_7
label IF_LABLE_START_7
push this 1
push constant 4
sub
pop this 1
goto IF_LABLE_END_7
label IF_LABLE_ELSE_7
push this 0
push constant 4
sub
pop this 0
label IF_LABLE_END_7
label IF_LABLE_END_5
push this 0
push this 10
gt
not
if-goto IF_LABLE_START_8
goto IF_LABLE_ELSE_8
label IF_LABLE_START_8
push constant 1
pop this 14
push this 10
pop this 0
goto IF_LABLE_END_8
label IF_LABLE_ELSE_8
label IF_LABLE_END_8
push this 0
push this 11
lt
not
if-goto IF_LABLE_START_9
goto IF_LABLE_ELSE_9
label IF_LABLE_START_9
push constant 2
pop this 14
push this 11
pop this 0
goto IF_LABLE_END_9
label IF_LABLE_ELSE_9
label IF_LABLE_END_9
push this 1
push this 12
gt
not
if-goto IF_LABLE_START_10
goto IF_LABLE_ELSE_10
label IF_LABLE_START_10
push constant 3
pop this 14
push this 12
pop this 1
goto IF_LABLE_END_10
label IF_LABLE_ELSE_10
label IF_LABLE_END_10
push this 1
push this 13
lt
not
if-goto IF_LABLE_START_11
goto IF_LABLE_ELSE_11
label IF_LABLE_START_11
push constant 4
pop this 14
push this 13
pop this 1
goto IF_LABLE_END_11
label IF_LABLE_ELSE_11
label IF_LABLE_END_11
push pointer 0
call Ball.show 1
pop temp 0
push this 14
return

//method void bounce(int bouncingDirection)
function Ball.bounce 5
push argument 0
pop pointer 0
push this 2
push constant 10
call Math.divide 2
pop local 2
push this 3
push constant 10
call Math.divide 2
pop local 3
push argument 1
push constant 0
eq
if-goto IF_LABLE_START_12
goto IF_LABLE_ELSE_12
label IF_LABLE_START_12
push constant 10
pop local 4
goto IF_LABLE_END_12
label IF_LABLE_ELSE_12
push this 2
push constant 0
lt
not
push argument 1
push constant 1
eq
and
push this 2
push constant 0
lt
push argument 1
push constant 1
neg
eq
and
or
if-goto IF_LABLE_START_13
goto IF_LABLE_ELSE_13
label IF_LABLE_START_13
push constant 20
pop local 4
goto IF_LABLE_END_13
label IF_LABLE_ELSE_13
push constant 5
pop local 4
label IF_LABLE_END_13
label IF_LABLE_END_12
push this 14
push constant 1
eq
if-goto IF_LABLE_START_14
goto IF_LABLE_ELSE_14
label IF_LABLE_START_14
push constant 506
pop local 0
push local 3
push constant 50
neg
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_LABLE_END_14
label IF_LABLE_ELSE_14
push this 14
push constant 2
eq
if-goto IF_LABLE_START_15
goto IF_LABLE_ELSE_15
label IF_LABLE_START_15
push constant 0
pop local 0
push local 3
push constant 50
call Math.multiply 2
push local 2
call Math.divide 2
pop local 1
push this 1
push local 1
push local 4
call Math.multiply 2
add
pop local 1
goto IF_LABLE_END_15
label IF_LABLE_ELSE_15
push this 14
push constant 3
eq
if-goto IF_LABLE_START_16
goto IF_LABLE_ELSE_16
label IF_LABLE_START_16
push constant 250
pop local 1
push local 2
push constant 25
neg
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
goto IF_LABLE_END_16
label IF_LABLE_ELSE_16
push constant 0
pop local 1
push local 2
push constant 25
call Math.multiply 2
push local 3
call Math.divide 2
pop local 0
push this 0
push local 0
push local 4
call Math.multiply 2
add
pop local 0
label IF_LABLE_END_16
label IF_LABLE_END_15
label IF_LABLE_END_14
push pointer 0
push local 0
push local 1
call Ball.setDestination 3
pop temp 0
push constant 0
return
